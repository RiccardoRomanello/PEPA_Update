/*******************************************************************************
 * Copyright (c) 2006, 2009 University of Edinburgh.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the BSD Licence, which
 * accompanies this feature and can be downloaded from
 * http://groups.inf.ed.ac.uk/pepa/update/licence.txt
 *******************************************************************************/
package uk.ac.ed.inf.pepa.emf.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import uk.ac.ed.inf.pepa.emf.util.EmfAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class EmfItemProviderAdapterFactory extends EmfAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Class<?>> supportedTypes = new ArrayList<Class<?>>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EmfItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.Activity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActivityItemProvider activityItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.Activity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createActivityAdapter() {
		if (activityItemProvider == null) {
			activityItemProvider = new ActivityItemProvider(this);
		}

		return activityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.Aggregation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AggregationItemProvider aggregationItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.Aggregation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAggregationAdapter() {
		if (aggregationItemProvider == null) {
			aggregationItemProvider = new AggregationItemProvider(this);
		}

		return aggregationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.Choice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChoiceItemProvider choiceItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.Choice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createChoiceAdapter() {
		if (choiceItemProvider == null) {
			choiceItemProvider = new ChoiceItemProvider(this);
		}

		return choiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.Cooperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CooperationItemProvider cooperationItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.Cooperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createCooperationAdapter() {
		if (cooperationItemProvider == null) {
			cooperationItemProvider = new CooperationItemProvider(this);
		}

		return cooperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.Hiding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HidingItemProvider hidingItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.Hiding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createHidingAdapter() {
		if (hidingItemProvider == null) {
			hidingItemProvider = new HidingItemProvider(this);
		}

		return hidingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.Model} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelItemProvider modelItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.Model}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createModelAdapter() {
		if (modelItemProvider == null) {
			modelItemProvider = new ModelItemProvider(this);
		}

		return modelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.PassiveRate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PassiveRateItemProvider passiveRateItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.PassiveRate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPassiveRateAdapter() {
		if (passiveRateItemProvider == null) {
			passiveRateItemProvider = new PassiveRateItemProvider(this);
		}

		return passiveRateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.Prefix} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrefixItemProvider prefixItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.Prefix}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPrefixAdapter() {
		if (prefixItemProvider == null) {
			prefixItemProvider = new PrefixItemProvider(this);
		}

		return prefixItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.SilentAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SilentActionItemProvider silentActionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.SilentAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSilentActionAdapter() {
		if (silentActionItemProvider == null) {
			silentActionItemProvider = new SilentActionItemProvider(this);
		}

		return silentActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.ActionIdentifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionIdentifierItemProvider actionIdentifierItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.ActionIdentifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createActionIdentifierAdapter() {
		if (actionIdentifierItemProvider == null) {
			actionIdentifierItemProvider = new ActionIdentifierItemProvider(this);
		}

		return actionIdentifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.NumberLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumberLiteralItemProvider numberLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.NumberLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createNumberLiteralAdapter() {
		if (numberLiteralItemProvider == null) {
			numberLiteralItemProvider = new NumberLiteralItemProvider(this);
		}

		return numberLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.ProcessAssignment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessAssignmentItemProvider processAssignmentItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.ProcessAssignment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createProcessAssignmentAdapter() {
		if (processAssignmentItemProvider == null) {
			processAssignmentItemProvider = new ProcessAssignmentItemProvider(this);
		}

		return processAssignmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.ProcessIdentifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessIdentifierItemProvider processIdentifierItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.ProcessIdentifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createProcessIdentifierAdapter() {
		if (processIdentifierItemProvider == null) {
			processIdentifierItemProvider = new ProcessIdentifierItemProvider(this);
		}

		return processIdentifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.RateAssignment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RateAssignmentItemProvider rateAssignmentItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.RateAssignment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRateAssignmentAdapter() {
		if (rateAssignmentItemProvider == null) {
			rateAssignmentItemProvider = new RateAssignmentItemProvider(this);
		}

		return rateAssignmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.RateExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RateExpressionItemProvider rateExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.RateExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRateExpressionAdapter() {
		if (rateExpressionItemProvider == null) {
			rateExpressionItemProvider = new RateExpressionItemProvider(this);
		}

		return rateExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.ed.inf.pepa.emf.RateIdentifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RateIdentifierItemProvider rateIdentifierItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.ed.inf.pepa.emf.RateIdentifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRateIdentifierAdapter() {
		if (rateIdentifierItemProvider == null) {
			rateIdentifierItemProvider = new RateIdentifierItemProvider(this);
		}

		return rateIdentifierItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (activityItemProvider != null) activityItemProvider.dispose();
		if (aggregationItemProvider != null) aggregationItemProvider.dispose();
		if (choiceItemProvider != null) choiceItemProvider.dispose();
		if (cooperationItemProvider != null) cooperationItemProvider.dispose();
		if (hidingItemProvider != null) hidingItemProvider.dispose();
		if (modelItemProvider != null) modelItemProvider.dispose();
		if (passiveRateItemProvider != null) passiveRateItemProvider.dispose();
		if (prefixItemProvider != null) prefixItemProvider.dispose();
		if (silentActionItemProvider != null) silentActionItemProvider.dispose();
		if (actionIdentifierItemProvider != null) actionIdentifierItemProvider.dispose();
		if (numberLiteralItemProvider != null) numberLiteralItemProvider.dispose();
		if (processAssignmentItemProvider != null) processAssignmentItemProvider.dispose();
		if (processIdentifierItemProvider != null) processIdentifierItemProvider.dispose();
		if (rateAssignmentItemProvider != null) rateAssignmentItemProvider.dispose();
		if (rateExpressionItemProvider != null) rateExpressionItemProvider.dispose();
		if (rateIdentifierItemProvider != null) rateIdentifierItemProvider.dispose();
	}

}
